{"version":3,"file":"component---src-page-components-entry-article-tsx-737613a632efefb7bd8e.js","mappings":"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","sources":["webpack://blog.nasustim.com/./src/utils/tagUtils.ts","webpack://blog.nasustim.com/./node_modules/extend/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://blog.nasustim.com/./node_modules/comma-separated-tokens/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://blog.nasustim.com/./node_modules/space-separated-tokens/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://blog.nasustim.com/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://blog.nasustim.com/./node_modules/html-url-attributes/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-combine-extensions/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/content.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/list.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-destination/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-label/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-title/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-factory-whitespace/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/definition.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-html-tag-name/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://blog.nasustim.com/./node_modules/decode-named-character-reference/index.dom.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-resolve-all/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-classify-character/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/attention.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-decode-string/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/types.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://blog.nasustim.com/./node_modules/@ungap/structured-clone/esm/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/micromark-util-sanitize-uri/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/footer.js","webpack://blog.nasustim.com/./node_modules/unist-util-visit-parents/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/unist-util-visit-parents/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/revert.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://blog.nasustim.com/./node_modules/trim-lines/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/state.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/remark-rehype/lib/index.js","webpack://blog.nasustim.com/./node_modules/bail/index.js","webpack://blog.nasustim.com/./node_modules/is-plain-obj/index.js","webpack://blog.nasustim.com/./node_modules/trough/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://blog.nasustim.com/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://blog.nasustim.com/./node_modules/react-markdown/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/node_modules/ccount/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://blog.nasustim.com/./node_modules/markdown-table/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://blog.nasustim.com/./node_modules/longest-streak/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-phrasing/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-string/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-is/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-phrasing/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/node_modules/micromark-util-combine-extensions/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-chunked/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-classify-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-resolve-all/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-factory-space/index.js","webpack://blog.nasustim.com/./node_modules/micromark-extension-gfm/index.js","webpack://blog.nasustim.com/./node_modules/remark-gfm/lib/index.js","webpack://blog.nasustim.com/./node_modules/mdast-util-gfm/lib/index.js","webpack://blog.nasustim.com/./src/components/organisms/markdown-renderer/index.css.ts","webpack://blog.nasustim.com/./src/components/atoms/tag/index.css.ts","webpack://blog.nasustim.com/./src/components/atoms/tag/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/tag-list/index.tsx","webpack://blog.nasustim.com/./src/components/organisms/tag-list/index.css.ts","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/schema.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/merge.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/normalize.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/info.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/types.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/defined-info.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/create.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xlink.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xml.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/xmlns.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/aria.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/svg.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-parse-selector/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/property-information/lib/find.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/create-h.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hastscript/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/vfile-location/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/web-namespaces/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-from-parse5/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/zwitch/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-to-parse5/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/html-void-elements/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/unicode.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/error-codes.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/token.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/decode_codepoint.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/decode.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/html.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tokenizer/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/open-element-stack.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/formatting-element-list.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/tree-adapters/default.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/doctype.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/common/foreign-content.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/parser/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/entities/lib/esm/escape.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/parse5/dist/serializer/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/unist-util-position/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/hast-util-raw/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/node_modules/unist-util-visit/lib/index.js","webpack://blog.nasustim.com/./node_modules/rehype-raw/lib/index.js","webpack://blog.nasustim.com/./src/components/organisms/markdown-renderer/index.tsx","webpack://blog.nasustim.com/./src/page-components/entry/article.tsx"],"sourcesContent":["/**\n * Tag utility functions\n */\n\n/**\n * Convert a tag name to a URL-safe slug\n * Handles Japanese characters, spaces, and special characters\n */\nexport function createTagSlug(tag: string): string {\n  return encodeURIComponent(tag.toLowerCase().trim());\n}\n\n/**\n * Get tag page path for a given tag slug\n */\nexport function getTagPagePath(tagSlug: string, pageIndex = 0): string {\n  const basePath = `/tag/${tagSlug}`;\n  return pageIndex === 0 ? basePath : `${basePath}/page/${pageIndex + 1}`;\n}\n\n/**\n * Get tags index page path\n */\nexport function getTagsIndexPath(): string {\n  return \"/tags\";\n}\n\n/**\n * Sort tags alphabetically (handles Japanese characters properly)\n */\nexport function sortTags(tags: string[]): string[] {\n  return [...tags].sort((a, b) => a.localeCompare(b, \"ja\"));\n}\n\n/**\n * Extract unique tags from a collection of articles with their counts\n */\nexport function extractTagsWithCounts(\n  articles: Array<{ tags?: string[] }>,\n): Array<{ tag: string; tagSlug: string; count: number }> {\n  const tagCounts = new Map<string, number>();\n\n  for (const article of articles) {\n    if (article.tags) {\n      for (const tag of article.tags) {\n        tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);\n      }\n    }\n  }\n\n  return Array.from(tagCounts.entries())\n    .map(([tag, count]) => ({\n      tag,\n      tagSlug: createTagSlug(tag),\n      count,\n    }))\n    .sort((a, b) => a.tag.localeCompare(b.tag, \"ja\"));\n}\n\n/**\n * Filter articles by tag\n */\nexport function filterArticlesByTag<T extends { tags?: string[] }>(\n  articles: T[],\n  targetTag: string,\n): T[] {\n  return articles.filter((article) => article.tags?.includes(targetTag));\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import \"src/style.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/organisms/markdown-renderer/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/markdown-renderer/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAA81U246bMBB9z1eMdlVpU5UIyEWtkfIjVVUZbMCN43FtsyGt9t8rCCSAQVqpfah4QTPnHJ/xeGbzPWZU/TyE8HsFcBHMlQSiMPyQrN5Wmy4ZtckzNYVQBKKDriEc5uM2n6NygRW/OIF4p+ukD124KEpHYBeOSFs4wseBcOBQ98whSoM4Fx2uDhYcbqGMHibuJ+7DZGLs81S+jGd4ocfbe7ytz9v658UebzfD886Lvni8vc+LvfOa3ox5lWx5UlgXWHeVPHBXzQkwYbPkcfmS527u9nGJzjNxpvIdClK0CpoyJlRx67LXBdpiMpRoCLxS8xIEVc13px/RegIkJb5yswSP1171GTLewlM0jBsCka7BohQMntND8yX3ZGAoE5Ul0L3fzvSN08X6MQj7QEqzU2GwUizoHD3zvPnuvcnpWcgrgTMqtJpmfPrC/3+Px9bjJxhGtOEP50xYLemVQCoxOyXTZQLQtC2XeAlqAjYzKOUoejFUE1Boulf1Nzex0zVE8T+r3NFUDtvTCEmqLSfQ/y0VOCd0BFdyym6Cvru+ygVqiuwKzhDlyiArhWQvsVovafWVzmk5Nu5mFzXDaW26Nx1VW2k4dgM72kYpSjYLJSTlORreDa1yXDkCT1+fFtA0d/cJ78HfJuBNjugUOm77FdUvmNse8hfhmNFtpcdeI0Arh8nq7Q859dNpEgcAAA==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var articleRoot = '_2danq63';\nexport var blockStyle = '_2danq61';\nexport var css = '_2danq60';\nexport var h2Style = '_2danq62';","import \"src/style.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LnV4ZTRrajAgewogIC0tdXhlNGtqMTogIzQ5NDc1NzsKICAtLXV4ZTRrajI6ICNkOTRiOTU7CiAgLS11eGU0a2ozOiAjZGRkZGRjOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/atoms/tag/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/atoms/tag/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmRndXVsdTAgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAwLjJlbSAwLjZlbTsKICBtYXJnaW46IDAuMWVtOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXV4ZTRrajEpOwogIGNvbG9yOiB2YXIoLS11eGU0a2ozKTsKICBmb250LXNpemU6IDAuOGVtOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KLmRndXVsdTA6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXV4ZTRrajIpOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var tagStyle = 'dguulu0';","import type { FC } from \"react\";\nimport { Link } from \"@/components/atoms/link\";\nimport { SITE_ORIGIN } from \"@/config\";\nimport { getTagPagePath } from \"@/utils/tagUtils\";\nimport { tagStyle } from \"./index.css\";\n\ntype Props = {\n  tag: string;\n  tagSlug: string;\n  clickable?: boolean;\n};\n\nexport const Tag: FC<Props> = ({ tag, tagSlug, clickable = true }) => {\n  if (clickable) {\n    return (\n      <Link to={new URL(getTagPagePath(tagSlug), SITE_ORIGIN)} noStyle>\n        <span className={tagStyle}>{tag}</span>\n      </Link>\n    );\n  }\n\n  return <span className={tagStyle}>{tag}</span>;\n};\n","import type { FC } from \"react\";\nimport { Tag } from \"@/components/atoms/tag\";\nimport { createTagSlug } from \"@/utils/tagUtils\";\nimport { containerStyle } from \"./index.css\";\n\ntype Props = {\n  tags: string[];\n  clickable?: boolean;\n  title?: string;\n};\n\nexport const TagList: FC<Props> = ({ tags, clickable = true, title }) => {\n  if (!tags || tags.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={containerStyle}>\n      {title && <span>{title}</span>}\n      {tags.map((tag) => (\n        <Tag\n          key={tag}\n          tag={tag}\n          tagSlug={createTagSlug(tag)}\n          clickable={clickable}\n        />\n      ))}\n    </div>\n  );\n};\n","import \"src/components/organisms/tag-list/index.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/organisms/tag-list/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xd2EzMXVmMCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDAuMmVtOwogIG1hcmdpbi10b3A6IDAuNWVtOwp9\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var containerStyle = '_1wa31uf0';","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","import type { FC } from \"react\";\nimport Markdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { css, blockStyle, h2Style, articleRoot } from \"./index.css\";\nimport { TagList } from \"@/components/organisms/tag-list\";\nimport rehypeRaw from \"rehype-raw\";\n\ntype Props = {\n  title: string;\n  date?: string;\n  markdown: string;\n  tags?: string[];\n};\nexport const MarkdownRenderer: FC<Props> = ({\n  markdown,\n  title,\n  date = \"\",\n  tags = [],\n}) => (\n  <div className={css}>\n    <div className={blockStyle}>\n      {date ? <small>{date}</small> : null}\n      <h2 className={h2Style}>{title}</h2>\n      {tags.length > 0 && <TagList tags={tags} />}\n    </div>\n    <article className={`${blockStyle} ${articleRoot}`}>\n      <Markdown remarkPlugins={[remarkGfm]} rehypePlugins={[rehypeRaw]}>\n        {markdown}\n      </Markdown>\n    </article>\n  </div>\n);\n","import { MarkdownRenderer } from \"@/components/organisms/markdown-renderer\";\nimport { CommonHead } from \"@/components/organisms/meta/common-head\";\nimport { Template } from \"@/components/templates\";\nimport { toPlainText } from \"@/utils/markdownUtils\";\nimport { type HeadFC, type PageProps, graphql } from \"gatsby\";\nimport { z } from \"zod\";\n\nconst EntryPage: React.FC<PageProps<Queries.EntryPageQueryQuery>> = ({\n  data,\n  location,\n}) => {\n  if (!data.markdownRemark) {\n    return <></>;\n  }\n  const { frontmatter, rawMarkdownBody } = data.markdownRemark;\n  if (frontmatter?.draft) {\n    return <></>;\n  }\n  return (\n    <Template pathname={location.pathname}>\n      <main>\n        <MarkdownRenderer\n          title={frontmatter?.title ?? \"\"}\n          date={frontmatter?.date ?? undefined}\n          markdown={rawMarkdownBody ?? \"\"}\n          tags={frontmatter?.tags ?? []}\n        />\n      </main>\n    </Template>\n  );\n};\n\nexport default EntryPage;\n\nexport const query = graphql`\n  query EntryPageQuery ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      rawMarkdownBody\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        draft\n        tags\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl \n      }\n    }\n  }\n`;\n\nconst frontmatterSchema = z.object({\n  date: z.string(),\n  slug: z.string(),\n  title: z.string(),\n  draft: z.boolean(),\n  tags: z.array(z.string()).nullable(),\n});\n\nconst siteMetadataSchema = z.object({\n  title: z.string(),\n  description: z.string(),\n  siteUrl: z.string(),\n});\n\nexport const querySchema = z.object({\n  markdownRemark: z.object({\n    frontmatter: frontmatterSchema,\n    rawMarkdownBody: z.string(),\n  }),\n  site: z.object({\n    siteMetadata: siteMetadataSchema,\n  }),\n});\n\nexport const Head: HeadFC<Queries.EntryPageQueryQuery> = (props) => {\n  const parseResult = querySchema.safeParse(props.data);\n  if (parseResult.error) {\n    throw new Error(parseResult.error.message);\n  }\n  const data = parseResult.data;\n\n  const description = toPlainText(data.markdownRemark.rawMarkdownBody).slice(\n    0,\n    160,\n  );\n\n  return (\n    <CommonHead\n      title={`${data.markdownRemark.frontmatter.title} | ${data.site.siteMetadata.title}`}\n      siteUrl={`${data.site.siteMetadata.siteUrl}/entry/${data.markdownRemark.frontmatter.slug}`}\n      description={description}\n    />\n  );\n};\n"],"names":["createTagSlug","tag","encodeURIComponent","toLowerCase","trim","getTagPagePath","tagSlug","pageIndex","basePath","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","__importDefault","this","mod","__esModule","style","iterator","styleObject","declarations","inline_style_parser_1","default","hasIterator","forEach","declaration","type","property","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","prop","val","ret","decl","decls","parse","tokens","input","String","index","indexOf","token","stringify","values","settings","join","padRight","padLeft","nameRe","nameReJsx","emptyOptions","jsx","test","empty","Schema","normal","space","merge","definitions","assign","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","check","own","create","definition","properties","info","transform","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","toUpperCase","hastToReact","split","point","pointStart","undefined","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","concat","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","parser","_contentTypeTextTrailing","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","document","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","colon","questionMark","numberSign","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","longestStreak","substring","checkQuote","quote","checkEmphasis","formatHeadingAsSetext","literalWithBreak","setext","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","encode","rank","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","blockStyle","tagStyle","Tag","_ref","clickable","_jsx","Link","SITE_ORIGIN","noStyle","TagList","tags","_jsxs","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","finalResult","h","s","cr","lf","webNamespaces","mathml","nodeName","quirksMode","childNodes","location","loc","indices","toOffset","eol","toPoint","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","currentSchema","parentNode","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","_a","Uint16Array","decodeMap","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","treeIndex","excess","decodeMode","Strict","startEntity","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","stitches","resetTokenizer","fromParse5","stitch","toParse5","createParse5Location","cloneWithoutChildren","fakeRoot","handleRaw","setPoint","node_","extra","rehypeRaw","MarkdownRenderer","markdown","date","_frontmatter$title","_frontmatter$date","_frontmatter$tags","markdownRemark","_Fragment","frontmatter","rawMarkdownBody","draft","Template","frontmatterSchema","slug","nullable","siteMetadataSchema","description","siteUrl","querySchema","site","siteMetadata","Head","parseResult","safeParse","toPlainText","CommonHead"],"sourceRoot":""}